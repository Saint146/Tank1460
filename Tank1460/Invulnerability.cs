using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Content;
using Microsoft.Xna.Framework.Graphics;
using Tank1460.Globals;

namespace Tank1460;

public class Invulnerability : TankEffect
{
    private readonly double _effectTime;
    private double _time;
    private IAnimation _animation;
    private readonly TimedAnimationPlayer _animationPlayer = new();

    public Invulnerability(Level level, double effectTime)
    {
        _effectTime = effectTime;
        _time = 0.0;
        LoadContent(level.Content);
    }

    private void LoadContent(ContentManagerEx content)
    {
        _animation = new Animation(content.Load<Texture2D>(@"Sprites/Effects/Invulnerability"), GameRules.TimeInFrames(2), true);
        _animationPlayer.PlayAnimation(_animation);
    }

    public override void Update(GameTime gameTime)
    {
        _animationPlayer.ProcessAnimation(gameTime);

        _time += gameTime.ElapsedGameTime.TotalSeconds;
        if (_time > _effectTime)
            Remove();
    }

    public override void Draw(SpriteBatch spriteBatch, Vector2 position)
    {
        _animationPlayer.Draw(spriteBatch, position);
    }
}